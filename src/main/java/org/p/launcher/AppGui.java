package org.p.launcher;

import com.formdev.flatlaf.FlatLightLaf;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.List;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Proto
 */
public class AppGui extends javax.swing.JFrame {

    /**
     * Creates new form AppGui
     */
    public AppGui() {
        FlatLightLaf.setup();
        initComponents();
    }

    public void run() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AppGui gui = new AppGui();
                gui.setResizable(false);
                gui.setVisible(true);
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        text_dbLauncherPath = new javax.swing.JTextField();
        button_dbJarBrowse = new javax.swing.JButton();
        radio_auto = new javax.swing.JRadioButton();
        radio_manual = new javax.swing.JRadioButton();
        button_manual = new javax.swing.JButton();
        text_manualLauncherPath = new javax.swing.JTextField();
        combobox_clientType = new javax.swing.JComboBox<>();
        text_cli = new javax.swing.JTextField();
        button_docs = new javax.swing.JButton();
        button_start = new javax.swing.JButton();
        radio_dbLauncherNormal = new javax.swing.JRadioButton();
        radio_cliargs = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DB launcher tool by Proto");

        text_dbLauncherPath.setText("DBLauncher.jar");
        text_dbLauncherPath.setEnabled(false);
        text_dbLauncherPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_dbLauncherPathActionPerformed(evt);
            }
        });

        button_dbJarBrowse.setText("Browse");
        button_dbJarBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_dbJarBrowseActionPerformed(evt);
            }
        });

        radio_auto.setSelected(true);
        radio_auto.setText("Find launcher automatically");
        radio_auto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_autoActionPerformed(evt);
            }
        });

        radio_manual.setText("Specify launcher jar");
        radio_manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_manualActionPerformed(evt);
            }
        });

        button_manual.setText("Browse");
        button_manual.setEnabled(false);
        button_manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_manualActionPerformed(evt);
            }
        });

        text_manualLauncherPath.setEnabled(false);
        text_manualLauncherPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_manualLauncherPathActionPerformed(evt);
            }
        });

        combobox_clientType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RuneLite", "HDOS" }));
        combobox_clientType.setToolTipText("");
        combobox_clientType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobox_clientTypeActionPerformed(evt);
            }
        });

        text_cli.setText("-covert, -debug");
        text_cli.setEnabled(false);

        button_docs.setText("Find out more");
        button_docs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_docsActionPerformed(evt);
            }
        });

        button_start.setText("Replace launcher");
        button_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_button_startActionPerformed(evt);
            }
        });

        radio_dbLauncherNormal.setSelected(true);
        radio_dbLauncherNormal.setText("Launch DB Launcher");
        radio_dbLauncherNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_dbLauncherNormalActionPerformed(evt);
            }
        });

        radio_cliargs.setText("Launching using CLI args");
        radio_cliargs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_cliargsActionPerformed(evt);
            }
        });

        jLabel1.setText("Jagex Launcher settings");

        jLabel2.setText("Dreambot settings");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radio_manual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_manualLauncherPath, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_manual))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radio_dbLauncherNormal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_dbLauncherPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_dbJarBrowse))
                    .addComponent(text_cli, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radio_auto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(combobox_clientType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radio_cliargs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_docs, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(button_start, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_dbLauncherNormal)
                    .addComponent(text_dbLauncherPath)
                    .addComponent(button_dbJarBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_cliargs)
                    .addComponent(button_docs, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_cli, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_auto)
                    .addComponent(combobox_clientType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_manual)
                    .addComponent(text_manualLauncherPath)
                    .addComponent(button_manual))
                .addGap(29, 29, 29)
                .addComponent(button_start)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_dbJarBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_dbJarBrowseActionPerformed
                JFileChooser fileChooser = new JFileChooser();
                int result = fileChooser.showOpenDialog(this);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    text_dbLauncherPath.setText(selectedFile.getAbsolutePath());
                }
    }//GEN-LAST:event_button_dbJarBrowseActionPerformed

    private void button_manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_manualActionPerformed
                JFileChooser fileChooser = new JFileChooser();
                int result = fileChooser.showOpenDialog(this);
                if (result == JFileChooser.APPROVE_OPTION) {
                    File selectedFile = fileChooser.getSelectedFile();
                    text_manualLauncherPath.setText(selectedFile.getAbsolutePath());
                }
    }//GEN-LAST:event_button_manualActionPerformed

    private void text_manualLauncherPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_manualLauncherPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_manualLauncherPathActionPerformed

    private void radio_autoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_autoActionPerformed
        radio_auto.setSelected(true);
        combobox_clientType.setEnabled(true);
        radio_manual.setSelected(false);
        text_manualLauncherPath.setEnabled(false);
        button_manual.setEnabled(false);

    }//GEN-LAST:event_radio_autoActionPerformed

    private void combobox_clientTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobox_clientTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combobox_clientTypeActionPerformed

    private void button_docsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_docsActionPerformed
       try {
        Desktop.getDesktop().browse(new URL("https://dreambot.org/guides/user-guide/quickstart/").toURI());
        } catch (MalformedURLException e) {} catch (URISyntaxException e) {
        } catch (IOException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_docsActionPerformed

    private void button_button_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_button_startActionPerformed
        try {
            if(radio_cliargs.isSelected()) {
                Main.replaceLauncher(text_dbLauncherPath.getText(), text_manualLauncherPath.getText(), Objects.requireNonNull(combobox_clientType.getSelectedItem()).toString(),  text_cli.getText(), true);
            } else {
                Main.replaceLauncher(text_dbLauncherPath.getText(), text_manualLauncherPath.getText(), Objects.requireNonNull(combobox_clientType.getSelectedItem()).toString(), "", false);
            }
        } catch (IOException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_button_startActionPerformed

    private void radio_manualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_manualActionPerformed
        radio_auto.setSelected(false);
        combobox_clientType.setEnabled(false);
        radio_manual.setSelected(true);
        text_manualLauncherPath.setEnabled(false);
        button_manual.setEnabled(true);

    }//GEN-LAST:event_radio_manualActionPerformed

    private void radio_dbLauncherNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_dbLauncherNormalActionPerformed
        radio_dbLauncherNormal.setSelected(true);
        radio_cliargs.setSelected(false);
        button_dbJarBrowse.setEnabled(true);
        text_cli.setEnabled(false);
    }//GEN-LAST:event_radio_dbLauncherNormalActionPerformed

    private void radio_cliargsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_cliargsActionPerformed
        radio_dbLauncherNormal.setSelected(false);
        radio_cliargs.setSelected(true);
        button_dbJarBrowse.setEnabled(false);
        text_cli.setEnabled(true);
    text_dbLauncherPath.setEnabled(false);}//GEN-LAST:event_radio_cliargsActionPerformed

    private void text_dbLauncherPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_dbLauncherPathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_dbLauncherPathActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AppGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton button_dbJarBrowse;
    private javax.swing.JButton button_docs;
    private javax.swing.JButton button_manual;
    private javax.swing.JButton button_start;
    private javax.swing.JComboBox<String> combobox_clientType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton radio_auto;
    private javax.swing.JRadioButton radio_cliargs;
    private javax.swing.JRadioButton radio_dbLauncherNormal;
    private javax.swing.JRadioButton radio_manual;
    private javax.swing.JTextField text_cli;
    private javax.swing.JTextField text_dbLauncherPath;
    private javax.swing.JTextField text_manualLauncherPath;
    // End of variables declaration//GEN-END:variables
}
